#version 410

layout (triangles, equal_spacing, ccw) in;
in vec3 evaluationpoint_wor[];
in vec2 evaluationpoint_texcoord[];
in vec3 evaluationpoint_normal[];

out vec2 textureCoordinate;

uniform mat4 transform;
uniform mat4 view;
uniform mat4 projection;
uniform sampler2D terrain;
uniform float heightLevel = 0.1;

void main () {
	

	vec3 p0 = gl_TessCoord.x * evaluationpoint_wor[0];
	vec3 p1 = gl_TessCoord.y * evaluationpoint_wor[1];
	vec3 p2 = gl_TessCoord.z * evaluationpoint_wor[2];
	vec3 pos = p0 + p1 + p2;
	
	vec2 t0 = gl_TessCoord.x * evaluationpoint_texcoord[0];
	vec2 t1 = gl_TessCoord.y * evaluationpoint_texcoord[1];
	vec2 t2 = gl_TessCoord.z * evaluationpoint_texcoord[2];
	textureCoordinate = t0 + t1 + t2;

	vec3 n0 = gl_TessCoord.x * evaluationpoint_normal[0];
	vec3 n1 = gl_TessCoord.y * evaluationpoint_normal[1];
	vec3 n2 = gl_TessCoord.z * evaluationpoint_normal[2];
	vec3 normal = n0 + n1 + n2;
	normal = normalize(normal);
	
	float height = texture(terrain, textureCoordinate).r;

	pos += normal * height * heightLevel; 
	gl_Position = projection * view  * transform * vec4 (pos, 1.0);	
}
